1) It doesn't update the counter.

2) py100/pybook_loopsanditerating_ages.py

3) 

While Loop:

my_list = [6, 3, 0, 11, 20, 4, 17]
index = 0
while index < len(my_list): 
    number = my_list[index]
    print(number)
    index += 1

For Loop:

my_list = [6, 3, 0, 11, 20, 4, 17]
for number in my_list:
    print(number)

While Loop:

4) 

my_list = [6, 3, 0, 11, 20, 4, 17]
index = 0
while index < len(my_list): 
    number = my_list[index]
    if my_list[index] % 2 == 0:
        print(number)
    index += 1


my_list = [6, 3, 0, 11, 20, 4, 17]
for number in my_list:
    if number % 2 != 0:
    print(number)

5)

my_list = [ 1, 3, 6, 11, 4, 2, 4, 9, 17, 16, 0]
update_list = list(my_list)
new_list = []
for number in update_list:
    if number % 2 == 0:
        new_list.append("even")
print(new_list)

6)

my_list = [ 1, 3, 6, 11, 4, 2, 4, 9, 17, 16, 0]
update_list = list(my_list)
new_list = []
for number in update_list:
    if number % 2 == 0:
        new_list.append("even")
    else:
        new_list.append("odd")
print(new_list)

7)

def find_integers(my_tuple):
    integers = []
    for integer in my_tuple:
        if element in my_tuple is int:
            integers.append()
    return integers

Answer actually is: 
def find_integers(things):
    return [ element for element in things if type(element) is int ]

8)
my_set = {
    'Fluffy',
    'Butterscotch',
    'Pudding',
    'Cheddar',
    'Cocoa',
}

object whose keys are strings and whose values are the length of the corresponding key. Only keys with odd lengths should be in the dict. Use the set given by my_set as the source of strings.

new_set = {key: for key in my_set if len(key) % 2 != 0 }
print(new_set)

9)

n = input("n: ")
def factorial(n)
    while True:
        n = (n * 1)
        n = ((n * 1 ) * 2)
        n = (((n * 1) * 2) * 3) 
        n = ((((n * 1) * 2) * 3 ) * 4)
        n = (((((n * 1) * 2) * 3) * 4)* 5)

return n

But the answer was:

def factorial(n):
    result = 1
    for number in range(n, 0, -1):
        result *= number

    return result

10)
import random

highest = 10
number = random.randrange(highest + 1)
while True:
    number = random.randrange(highest + 1)
    print(number)
    if number == highest:
        break

